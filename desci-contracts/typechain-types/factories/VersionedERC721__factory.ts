/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VersionedERC721,
  VersionedERC721Interface,
} from "../VersionedERC721";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_uuid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_cid",
        type: "bytes",
      },
    ],
    name: "VersionPush",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "__VersionedERC721_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_metadata",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cid",
        type: "bytes",
      },
    ],
    name: "updateMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612976806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063599ad936116100a25780639a7fad40116100715780639a7fad40146102dc578063a22cb465146102f8578063b88d4fde14610314578063c87b56dd14610330578063e985e9c5146103605761010b565b8063599ad936146102425780636352211e1461025e57806370a082311461028e57806395d89b41146102be5761010b565b806313859f46116100de57806313859f46146101aa57806323b872dd146101da57806342842e0e146101f65780634f558e79146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611dae565b610390565b60405161013791906121c5565b60405180910390f35b610148610472565b6040516101559190612202565b60405180910390f35b61017860048036038101906101739190611e6c565b610504565b604051610185919061215e565b60405180910390f35b6101a860048036038101906101a39190611d72565b61054a565b005b6101c460048036038101906101bf9190611e6c565b610662565b6040516101d191906121e0565b60405180910390f35b6101f460048036038101906101ef9190611c6c565b610702565b005b610210600480360381019061020b9190611c6c565b610762565b005b61022c60048036038101906102279190611e6c565b610782565b60405161023991906121c5565b60405180910390f35b61025c60048036038101906102579190611e00565b610794565b005b61027860048036038101906102739190611e6c565b6107f1565b604051610285919061215e565b60405180910390f35b6102a860048036038101906102a39190611c07565b610878565b6040516102b59190612384565b60405180910390f35b6102c6610930565b6040516102d39190612202565b60405180910390f35b6102f660048036038101906102f19190611e95565b6109c2565b005b610312600480360381019061030d9190611d36565b610acf565b005b61032e60048036038101906103299190611cbb565b610ae5565b005b61034a60048036038101906103459190611e6c565b610b47565b6040516103579190612202565b60405180910390f35b61037a60048036038101906103759190611c30565b610baf565b60405161038791906121c5565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046b575061046a82610c43565b5b9050919050565b6060606580546104819061251f565b80601f01602080910402602001604051908101604052809291908181526020018280546104ad9061251f565b80156104fa5780601f106104cf576101008083540402835291602001916104fa565b820191906000526020600020905b8154815290600101906020018083116104dd57829003601f168201915b5050505050905090565b600061050f82610cad565b6069600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610555826107f1565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd90612324565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105e5610cf8565b73ffffffffffffffffffffffffffffffffffffffff16148061061457506106138161060e610cf8565b610baf565b5b610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90612344565b60405180910390fd5b61065d8383610d00565b505050565b609760205280600052604060002060009150905080546106819061251f565b80601f01602080910402602001604051908101604052809291908181526020018280546106ad9061251f565b80156106fa5780601f106106cf576101008083540402835291602001916106fa565b820191906000526020600020905b8154815290600101906020018083116106dd57829003601f168201915b505050505081565b61071361070d610cf8565b82610db9565b610752576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074990612224565b60405180910390fd5b61075d838383610e4e565b505050565b61077d83838360405180602001604052806000815250610ae5565b505050565b600061078d82611148565b9050919050565b600060019054906101000a900460ff166107e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107da90612364565b60405180910390fd5b6107ed8282611189565b5050565b6000806107fd836111e6565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690612304565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e0906122c4565b60405180910390fd5b606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606066805461093f9061251f565b80601f016020809104026020016040519081016040528092919081815260200182805461096b9061251f565b80156109b85780601f1061098d576101008083540402835291602001916109b8565b820191906000526020600020905b81548152906001019060200180831161099b57829003601f168201915b5050505050905090565b8160006109cd610cf8565b905060008173ffffffffffffffffffffffffffffffffffffffff166109f1846107f1565b73ffffffffffffffffffffffffffffffffffffffff1614905080610a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a41906122e4565b60405180910390fd5b83609760008781526020019081526020016000209080519060200190610a719291906119a5565b5084610a7b610cf8565b73ffffffffffffffffffffffffffffffffffffffff167fabddf73bfc8efbf8287a09ea355e43cf6c0c22880ce0470affeba5271c0a769486604051610ac091906121e0565b60405180910390a35050505050565b610ae1610ada610cf8565b8383611223565b5050565b610af6610af0610cf8565b83610db9565b610b35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2c90612224565b60405180910390fd5b610b4184848484611390565b50505050565b6060610b5282610cad565b6000610b5c6113ec565b90506000815111610b7c5760405180602001604052806000815250610ba7565b80610b8684611403565b604051602001610b9792919061213a565b6040516020818303038152906040525b915050919050565b6000606a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610cb681611148565b610cf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cec90612304565b60405180910390fd5b50565b600033905090565b816069600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610d73836107f1565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610dc5836107f1565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610e075750610e068185610baf565b5b80610e4557508373ffffffffffffffffffffffffffffffffffffffff16610e2d84610504565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610e6e826107f1565b73ffffffffffffffffffffffffffffffffffffffff1614610ec4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebb90612264565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2b90612284565b60405180910390fd5b610f418383836001611527565b8273ffffffffffffffffffffffffffffffffffffffff16610f61826107f1565b73ffffffffffffffffffffffffffffffffffffffff1614610fb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fae90612264565b60405180910390fd5b6069600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816067600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611143838383600161152d565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116a836111e6565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600060019054906101000a900460ff166111d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cf90612364565b60405180910390fd5b6111e28282611533565b5050565b60006067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611292576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611289906122a4565b60405180910390fd5b80606a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161138391906121c5565b60405180910390a3505050565b61139b848484610e4e565b6113a7848484846115b4565b6113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dd90612244565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016114128461174b565b01905060008167ffffffffffffffff811115611457577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156114895781602001600182028036833780820191505090505b509050600082602001820190505b60011561151c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611506577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04945060008514156115175761151c565b611497565b819350505050919050565b50505050565b50505050565b600060019054906101000a900460ff16611582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157990612364565b60405180910390fd5b8160659080519060200190611598929190611a2b565b5080606690805190602001906115af929190611a2b565b505050565b60006115d58473ffffffffffffffffffffffffffffffffffffffff16611982565b1561173e578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026115fe610cf8565b8786866040518563ffffffff1660e01b81526004016116209493929190612179565b602060405180830381600087803b15801561163a57600080fd5b505af192505050801561166b57506040513d601f19601f820116820180604052508101906116689190611dd7565b60015b6116ee573d806000811461169b576040519150601f19603f3d011682016040523d82523d6000602084013e6116a0565b606091505b506000815114156116e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116dd90612244565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611743565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106117cf577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816117c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611832576d04ee2d6d415b85acef81000000008381611828577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506020810190505b662386f26fc10000831061188757662386f26fc10000838161187d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506010810190505b6305f5e10083106118d6576305f5e10083816118cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506008810190505b6127108310611921576127108381611917577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506004810190505b6064831061196a5760648381611960577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506002810190505b600a8310611979576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b8280546119b19061251f565b90600052602060002090601f0160209004810192826119d35760008555611a1a565b82601f106119ec57805160ff1916838001178555611a1a565b82800160010185558215611a1a579182015b82811115611a195782518255916020019190600101906119fe565b5b509050611a279190611ab1565b5090565b828054611a379061251f565b90600052602060002090601f016020900481019282611a595760008555611aa0565b82601f10611a7257805160ff1916838001178555611aa0565b82800160010185558215611aa0579182015b82811115611a9f578251825591602001919060010190611a84565b5b509050611aad9190611ab1565b5090565b5b80821115611aca576000816000905550600101611ab2565b5090565b6000611ae1611adc846123c4565b61239f565b905082815260208101848484011115611af957600080fd5b611b048482856124dd565b509392505050565b6000611b1f611b1a846123f5565b61239f565b905082815260208101848484011115611b3757600080fd5b611b428482856124dd565b509392505050565b600081359050611b59816128e4565b92915050565b600081359050611b6e816128fb565b92915050565b600081359050611b8381612912565b92915050565b600081519050611b9881612912565b92915050565b600082601f830112611baf57600080fd5b8135611bbf848260208601611ace565b91505092915050565b600082601f830112611bd957600080fd5b8135611be9848260208601611b0c565b91505092915050565b600081359050611c0181612929565b92915050565b600060208284031215611c1957600080fd5b6000611c2784828501611b4a565b91505092915050565b60008060408385031215611c4357600080fd5b6000611c5185828601611b4a565b9250506020611c6285828601611b4a565b9150509250929050565b600080600060608486031215611c8157600080fd5b6000611c8f86828701611b4a565b9350506020611ca086828701611b4a565b9250506040611cb186828701611bf2565b9150509250925092565b60008060008060808587031215611cd157600080fd5b6000611cdf87828801611b4a565b9450506020611cf087828801611b4a565b9350506040611d0187828801611bf2565b925050606085013567ffffffffffffffff811115611d1e57600080fd5b611d2a87828801611b9e565b91505092959194509250565b60008060408385031215611d4957600080fd5b6000611d5785828601611b4a565b9250506020611d6885828601611b5f565b9150509250929050565b60008060408385031215611d8557600080fd5b6000611d9385828601611b4a565b9250506020611da485828601611bf2565b9150509250929050565b600060208284031215611dc057600080fd5b6000611dce84828501611b74565b91505092915050565b600060208284031215611de957600080fd5b6000611df784828501611b89565b91505092915050565b60008060408385031215611e1357600080fd5b600083013567ffffffffffffffff811115611e2d57600080fd5b611e3985828601611bc8565b925050602083013567ffffffffffffffff811115611e5657600080fd5b611e6285828601611bc8565b9150509250929050565b600060208284031215611e7e57600080fd5b6000611e8c84828501611bf2565b91505092915050565b60008060408385031215611ea857600080fd5b6000611eb685828601611bf2565b925050602083013567ffffffffffffffff811115611ed357600080fd5b611edf85828601611b9e565b9150509250929050565b611ef281612469565b82525050565b611f018161247b565b82525050565b6000611f1282612426565b611f1c818561243c565b9350611f2c8185602086016124ec565b611f35816125e0565b840191505092915050565b6000611f4b82612431565b611f55818561244d565b9350611f658185602086016124ec565b611f6e816125e0565b840191505092915050565b6000611f8482612431565b611f8e818561245e565b9350611f9e8185602086016124ec565b80840191505092915050565b6000611fb7602d8361244d565b9150611fc2826125f1565b604082019050919050565b6000611fda60328361244d565b9150611fe582612640565b604082019050919050565b6000611ffd60258361244d565b91506120088261268f565b604082019050919050565b600061202060248361244d565b915061202b826126de565b604082019050919050565b600061204360198361244d565b915061204e8261272d565b602082019050919050565b600061206660298361244d565b915061207182612756565b604082019050919050565b6000612089600d8361244d565b9150612094826127a5565b602082019050919050565b60006120ac60188361244d565b91506120b7826127ce565b602082019050919050565b60006120cf60218361244d565b91506120da826127f7565b604082019050919050565b60006120f2603d8361244d565b91506120fd82612846565b604082019050919050565b6000612115602b8361244d565b915061212082612895565b604082019050919050565b612134816124d3565b82525050565b60006121468285611f79565b91506121528284611f79565b91508190509392505050565b60006020820190506121736000830184611ee9565b92915050565b600060808201905061218e6000830187611ee9565b61219b6020830186611ee9565b6121a8604083018561212b565b81810360608301526121ba8184611f07565b905095945050505050565b60006020820190506121da6000830184611ef8565b92915050565b600060208201905081810360008301526121fa8184611f07565b905092915050565b6000602082019050818103600083015261221c8184611f40565b905092915050565b6000602082019050818103600083015261223d81611faa565b9050919050565b6000602082019050818103600083015261225d81611fcd565b9050919050565b6000602082019050818103600083015261227d81611ff0565b9050919050565b6000602082019050818103600083015261229d81612013565b9050919050565b600060208201905081810360008301526122bd81612036565b9050919050565b600060208201905081810360008301526122dd81612059565b9050919050565b600060208201905081810360008301526122fd8161207c565b9050919050565b6000602082019050818103600083015261231d8161209f565b9050919050565b6000602082019050818103600083015261233d816120c2565b9050919050565b6000602082019050818103600083015261235d816120e5565b9050919050565b6000602082019050818103600083015261237d81612108565b9050919050565b6000602082019050612399600083018461212b565b92915050565b60006123a96123ba565b90506123b58282612551565b919050565b6000604051905090565b600067ffffffffffffffff8211156123df576123de6125b1565b5b6123e8826125e0565b9050602081019050919050565b600067ffffffffffffffff8211156124105761240f6125b1565b5b612419826125e0565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612474826124b3565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561250a5780820151818401526020810190506124ef565b83811115612519576000848401525b50505050565b6000600282049050600182168061253757607f821691505b6020821081141561254b5761254a612582565b5b50919050565b61255a826125e0565b810181811067ffffffffffffffff82111715612579576125786125b1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4e6f207065726d697373696f6e00000000000000000000000000000000000000600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6128ed81612469565b81146128f857600080fd5b50565b6129048161247b565b811461290f57600080fd5b50565b61291b81612487565b811461292657600080fd5b50565b612932816124d3565b811461293d57600080fd5b5056fea2646970667358221220a25553647d3459f5000b545581c372c1da18a4b2d4b0fc3cc799f06d584b033364736f6c63430008040033";

type VersionedERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VersionedERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VersionedERC721__factory extends ContractFactory {
  constructor(...args: VersionedERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "VersionedERC721";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VersionedERC721> {
    return super.deploy(overrides || {}) as Promise<VersionedERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VersionedERC721 {
    return super.attach(address) as VersionedERC721;
  }
  connect(signer: Signer): VersionedERC721__factory {
    return super.connect(signer) as VersionedERC721__factory;
  }
  static readonly contractName: "VersionedERC721";
  public readonly contractName: "VersionedERC721";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VersionedERC721Interface {
    return new utils.Interface(_abi) as VersionedERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VersionedERC721 {
    return new Contract(address, _abi, signerOrProvider) as VersionedERC721;
  }
}
